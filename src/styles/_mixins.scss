@import 'variables';

@mixin clearfix() {
  &:after {
    content: " ";
    display: table;
    clear: both;
  }
}

@mixin absolute-center() {
  position: relative;

  > * {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin breakpoint($direction, $class) {
  $widthProp: max-width;

  // Direction
  @if $direction == up {
    $widthProp: min-width;
  }
  @else if $direction != down {
    @warn "Breakpoint mixin direction supports: up, down";
  }

  // Media query
  @if $class == sm {
    @media (#{$widthProp}: $breakpoint-medium) { @content; }
  }
  @else if $class == md {
    @media (#{$widthProp}: $breakpoint-medium) { @content; }
  }
  @else if $class == lg {
    @media (#{$widthProp}: $breakpoint-large) { @content; }
  }
  @else if $class == xl {
    @media (#{$widthProp}: $breakpoint-xlarge) { @content; }
  }
  @else {
    @warn "Breakpoint mixin class supports: sm, md, lg, xl";
  }
}

// ---------------------------------------------
// Text Mixins
// ---------------------------------------------
@mixin anchor($color: $brand-primary, $decoration: none, $hoverColor: $brand-primary) {
  color: $color;
  text-decoration: $decoration;

  &:hover {
    color: darken($hoverColor, 10);
  }
}

@mixin placeholder() {
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    @content;
  }
  &::-moz-placeholder { /* Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder { /* IE 10+ */
    @content;
  }
  &:-moz-placeholder { /* Firefox 18- */
    @content;
  }
}

@mixin anchor($color: $brand-secondary, $hoverColor: $brand-primary) {
  color: $color;
  cursor: pointer;
  text-decoration: none;
  transition: color $anim-med;

  &:hover {
    color: $hoverColor;
  }
}
